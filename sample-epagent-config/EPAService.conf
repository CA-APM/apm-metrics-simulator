#encoding=UTF-8
wrapper.license.type=DEV
wrapper.license.id=201510280000024
wrapper.license.licensee=CA, Inc.
wrapper.license.group=Tanuki Users
wrapper.license.dev_application=EPAgent
wrapper.license.features=pro, 64bit
wrapper.license.upgrade_term.begin_date=2008-12-16
wrapper.license.upgrade_term.end_date=2016-12-16
wrapper.license.key.1=4221-d4c0-10e5-2df7
wrapper.license.key.2=a227-b653-384b-6582
wrapper.license.key.3=5db2-60b5-b362-6ff3
wrapper.license.key.4=a0eb-6697-506f-bc06


#********************************************************************
# Wrapper Java Properties
#********************************************************************

# Set to override the existing JAVA_HOME variable, if necessary.
#set.JAVA_HOME=C:\Program Files\jdk1.7.0

# The command to use when launching a JVM.
# If the full path to the Java executable is not specified,
# then the Wrapper will attempt to locate a Java executable on the system path.
# Example using system path:
#  wrapper.java.command=java
# Example using JAVA_HOME environment variable:
#  wrapper.java.command=%JAVA_HOME%/bin/java
# Example using full path:
#  wrapper.java.command=C:\Program Files\jdk1.7.0\bin\java
wrapper.java.command=%JAVA_HOME%/bin/java

# Additional Java parameters to pass to Java when it is launched.
# These are not parameters for the application, but rather parameters for the JVM.
# It is important that each property only define a single argument to the JVM.
# Quotes will be stripped on UNIX.
# Examples:
#  wrapper.java.additional.1=-Xmx1024m
#  wrapper.java.additional.2=-Xms512m
#  wrapper.java.additional.3=-Dmy.property=some_value
wrapper.java.additional.1=-Dcom.wily.introscope.epagent.properties="../IntroscopeEPAgent.properties"
wrapper.java.additional.2=-Xmx1024m

# Strip quotes for all Java additional parameters on UNIX
wrapper.java.additional.default.stripquotes=TRUE

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=FALSE

#include.required ../IntroscopeEPAgent.properties

#wrapper.working.dir=../

# The Wrapper will print out the exact version of the JVM in console mode only.
wrapper.java.version.output=TRUE

# Tell the Wrapper to log the full generated Java command line.
wrapper.java.command.loglevel=STATUS

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=../lib/wrapper.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=../lib

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=../lib/EPAgent.jar

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=M

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=../logs/EPAgentService.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=TLM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=STATUS

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=10m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=1

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Do not start, if the pid file already exists.
wrapper.pidfile.strict=TRUE

# Title to use when running as a console
wrapper.console.title=CA APM Environment Performance Agent

# Never timeout during application startup 
wrapper.startup.timeout=0

# Never timeout during application shutdown
wrapper.shutdown.timeout=0

# Maximum number of times that the Wrapper will attempt to restart the JVM
wrapper.max_failed_invocations=5

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=60
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
#  Ignore -verbose:class output to avoid false positives.
wrapper.filter.trigger.1000=[Loaded java.lang.OutOfMemoryError
wrapper.filter.action.1000=NONE
# (Simple match)
wrapper.filter.trigger.1001=java.lang.OutOfMemoryError
# (Only match text in stack traces if -XX:+PrintClassHistogram is being used.)
#wrapper.filter.trigger.1001=Exception in thread "*" java.lang.OutOfMemoryError
#wrapper.filter.allow_wildcards.1001=TRUE
wrapper.filter.action.1001=RESTART
wrapper.filter.message.1001=The JVM has run out of memory.

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=EPAgent

# Display name of the service
wrapper.displayname=CA APM Environment Performance Agent

# Description of the service
wrapper.description=CA APM Standalone EPAgent

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false
